name: Build and Release Deceptgold

on:
  push:
    branches:
      - master

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch tags
        run: git fetch --tags

      - name: Get latest semver tag
        id: get_latest_tag
        run: |
          latest=$(git tag --list 'v*' --sort=-v:refname | head -n 1)
          echo "LATEST_TAG=$latest" >> $GITHUB_ENV

      - name: Bump patch version
        id: bump_version
        run: |
          latest="${{ env.LATEST_TAG }}"
          if [[ "$latest" == "" ]]; then
            echo "NEW_TAG=v0.1.0" >> $GITHUB_ENV
          else
            IFS='.' read -r major minor patch <<< "${latest#v}"
            patch=$((patch + 1))
            echo "NEW_TAG=v${major}.${minor}.${patch}" >> $GITHUB_ENV
          fi

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          export PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring
          poetry install
        working-directory: deceptgold

      - name: Run compile script
        run: |
          chmod +x utils/compile.sh
          poetry run ./utils/compile.sh
        working-directory: deceptgold

      - name: Create and push new tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ env.NEW_TAG }}
          git push origin ${{ env.NEW_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List .deb files (debug)
        run: |
          echo "Arquivos .deb encontrados:"
          find deceptgold/dist -name "*.deb"

      - name: Create GitHub Release and Upload .deb
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.NEW_TAG }}
          tag_name: ${{ env.NEW_TAG }}
          files: deceptgold/dist/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
